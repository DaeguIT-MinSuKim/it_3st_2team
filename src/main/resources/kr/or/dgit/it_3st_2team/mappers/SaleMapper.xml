<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.it_3st_2team.dao.SaleDao">
	 <resultMap id="saleResult" type="Sale">
		<id property="saleNo" column="sale_no"/>
		<result property="description" column="description"/>
		<result property="sDate" column="sdate"/>
		<result property="sTime" column="stime"/>
		<result property="sPrice" column="sprice"/>
		<collection property="hairs" resultMap="kr.or.dgit.it_3st_2team.dao.HairDao.hairResult"/> <!-- khj 일대다 -->
	</resultMap> 

	<!-- khj -->
	<resultMap id="saleResultAddOthers" type="Sale" extends="saleResult">
		<association property="cus" resultMap="kr.or.dgit.it_3st_2team.dao.CustomerDao.customerResult"></association>
		<association property="emp" resultMap="kr.or.dgit.it_3st_2team.dao.EmployeeDao.employeeResult"></association>
		<association property="evn" resultMap="kr.or.dgit.it_3st_2team.dao.EventDao.eventResult"></association>
	</resultMap>
	
	<!-- khj 마지막 영엉번호 가져오기 -->
	<select id="selectMaxSaleNo" resultType="int">
		select max(sale_no) from sale
	</select>

	<!-- yyj 02-27 -->
	<resultMap type="Sale" id="selectRe" extends="saleResult">
		<association property="cus" resultMap="kr.or.dgit.it_3st_2team.dao.CustomerDao.cusNameResult"></association>
		<association property="emp" resultMap="kr.or.dgit.it_3st_2team.dao.EmployeeDao.employeeResult"></association>
		<association property="evn" resultMap="kr.or.dgit.it_3st_2team.dao.EventDao.eventResult"></association>
		<association property="hair" resultMap="kr.or.dgit.it_3st_2team.dao.HairDao.hairResult"></association>
	</resultMap>
	
	<sql id="selectYearSql">
		select s.sale_no,sdate,stime,c.cus_name,h.hair_name,ev.evn_name,s.sprice
			from sale s 
			join enroll e on s.sale_no=e.sale_no
			join customer c on s.cus_no=c.cus_no
			join hair h on h.hair_no=e.hair_no
			join event ev on ev.evn_no=s.evn_no
	</sql>
	
	<sql id="whereYearSql">
		<where>
			<if test="sDate != null">
				sdate like #{sDate} order by sdate
			</if>
		</where>
	</sql>
		
	<select id="selectReportYear" resultMap="selectRe" parameterType="map">
			<include refid="selectYearSql"></include>
			<include refid="whereYearSql"></include>
	</select>




	<!--khj 안쓸수도 있음 -->
	<insert id="insertSale" parameterType="Sale">
		insert into sale(sale_no,sdate,stime,cus_no,emp_no,evn_no,sprice) 
		values (#{saleNo},#{sDate},#{sTime},#{cus.cusNo},#{emp.empNo},#{evn.evnNo},#{sPrice})
	</insert>
	
	<!-- khj 20180227 -->
	<select id="selectAllSale" resultMap="saleResultAddOthers">
		<!-- select sale_no, sdate, stime, cus_no, emp_no, evn_no, sprice from sale -->
		<!-- select sale_no, sdate, stime, c.cus_name, e.emp_name, v.evn_name, sprice from sale s 
		join customer c on s.cus_no=c.cus_no
		join employee e on s.emp_no=e.emp_no
		join event v on s.evn_no=v.evn_no order by sale_no; -->
		select s.sale_no, s.sdate, s.stime, c.cus_name, m.emp_name, n.evn_name, s.sprice, h.hair_name 
			from sale s 
			join enroll e on s.sale_no=e.sale_no 
			join hair h on e.hair_no=h.hair_no 
			join event n on s.evn_no=n.evn_no
			join employee m on s.emp_no=m.emp_no
			join customer c on s.cus_no=c.cus_no
			order by s.sale_no;
	</select>
	

	<!-- select count yyj 02-27-->
	
		<sql id="selectYearCountSql">
		select  count(*) as 'count' from sale
	</sql>
	<sql id="whereYearCountSql">
		<where>
			<if test="sDate != null">
				sdate like #{sDate} group by Month(sdate)
			</if>
		</where>
	</sql>
	
	<sql id="whereMonthCountSql">
		<where>
			<if test="sDate != null">
				sdate like #{sDate} group by year(sdate)
			</if>
		</where>
	</sql>
	
	<select id="selectCount" resultType="int">
		<include refid="selectYearCountSql"></include>
		<include refid="whereYearCountSql"></include>
	</select>
	<!-- yyj 02-28 -->
	<select id="selectCountMonth" resultType="int">
		<include refid="selectYearCountSql"></include>
		<include refid="whereMonthCountSql"></include>
	</select>
</mapper>